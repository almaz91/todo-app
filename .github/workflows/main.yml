name: Publish Docker Image to Docker Hub and Deploy on the Server

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Publish to DockerHub
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: almaz91/todo-app
          registry: docker.io
          tags: ${BRANCH_NAME}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  test:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
#      - name: Test
#        run: go test ./...
          
  prepare-environment:
    needs: build
    runs-on: self-hosted
    if: github.event_name == 'push'
    steps:
      - name: Stop and remove containers, networks
        run: docker-compose down
      - name: Remove unused data
        run: docker system prune -a -f
      - name: Update swagger scripts
        run: swag init -g .\main\main.go
      - name: Database migration
        run: |
           curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | apt-key add -
           echo "deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/migrate.list
           apt-get update
           apt-get install -y migrate
#           migrate -path ./schema -database 'postgres://postgres:qwerty@localhost:5432/postgres?sslmode=disable' up
          
  deploy:
    needs: [build, prepare-environment]
    runs-on: self-hosted
    if: github.event_name == 'push'
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          file_name: .env
          directory: "./"
          fail_on_empty: false
          sort_keys: false

      - name: pull images
        run: docker-compose pull

      - name: restart containers
        run: docker-compose up -d