name: Publish Docker Image to Docker Hub.

on:
  push:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Publish to DockerHub
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: almaz91/todo-app
          registry: docker.io
          tags: ${BRANCH_NAME}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Trigger repo
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: it-job-market-analytics
          repo: compose-stack
          ref: prod
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          workflow_file_name: deploy-runners.yaml
          client_payload: '{}'
          wait_interval: 11
          trigger_workflow: true
          wait_workflow: true
          propagate_failure: true



















name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "almaz91/todo-app"
  IMAGE_NAME: "todo-app-image"
  CONTAINER_NAME: "todo-app-container"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to VDS by Selectel via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new docker compose from a new images
            docker-compose up --build $(echo $CONTAINER_NAME)
            